
{}
= {} Lowest Available: 1, Highest Used: 0, Count: 0


// Add to empty
+5
= {5} Lowest Available: 1, Highest Used: 5, Count: 1


// Add before first
+2
= {2,5} Lowest Available: 1, Highest Used: 5, Count: 2


// Add after last
+10
= {2,5,10} Lowest Available: 1, Highest Used: 10, Count: 3


// Add in between
+7
= {2,5,7,10} Lowest Available: 1, Highest Used: 10, Count: 4



{5,10,15}
= {5,10,15} Lowest Available: 1, Highest Used: 15, Count: 3


// Left extend first
+4
= {4-5,10,15} Lowest Available: 1, Highest Used: 15, Count: 4


// Left extend middle
+9
= {4-5,9-10,15} Lowest Available: 1, Highest Used: 15, Count: 5


// Left extend last
+14
= {4-5,9-10,14-15} Lowest Available: 1, Highest Used: 15, Count: 6



{5,10,15}
= {5,10,15} Lowest Available: 1, Highest Used: 15, Count: 3


// Right extend first
+6
= {5-6,10,15} Lowest Available: 1, Highest Used: 15, Count: 4


// Right extend middle
+11
= {5-6,10-11,15} Lowest Available: 1, Highest Used: 15, Count: 5


// Right extend last
+16
= {5-6,10-11,15-16} Lowest Available: 1, Highest Used: 16, Count: 6



{5-10,20-30,40-50}
= {5-10,20-30,40-50} Lowest Available: 1, Highest Used: 50, Count: 28


// Left extend first range
+4
= {4-10,20-30,40-50} Lowest Available: 1, Highest Used: 50, Count: 29


// Left extend middle range
+19
= {4-10,19-30,40-50} Lowest Available: 1, Highest Used: 50, Count: 30


// Left extend last range
+39
= {4-10,19-30,39-50} Lowest Available: 1, Highest Used: 50, Count: 31



{5-10,20-30,40-50}
= {5-10,20-30,40-50} Lowest Available: 1, Highest Used: 50, Count: 28


// Right extend first range
+11
= {5-11,20-30,40-50} Lowest Available: 1, Highest Used: 50, Count: 29


// Right extend middle range
+31
= {5-11,20-31,40-50} Lowest Available: 1, Highest Used: 50, Count: 30


// Right extend last range
+51
= {5-11,20-31,40-51} Lowest Available: 1, Highest Used: 51, Count: 31



{1,3,10-20,22-30,40,42-50,52}
= {1,3,10-20,22-30,40,42-50,52} Lowest Available: 2, Highest Used: 52, Count: 33


// Join singles
+2
= {1-3,10-20,22-30,40,42-50,52} Lowest Available: 4, Highest Used: 52, Count: 34


// Join ranges
+21
= {1-3,10-30,40,42-50,52} Lowest Available: 4, Highest Used: 52, Count: 35


// Join singles to range
+41
= {1-3,10-30,40-50,52} Lowest Available: 4, Highest Used: 52, Count: 36

+51
= {1-3,10-30,40-52} Lowest Available: 4, Highest Used: 52, Count: 37



{5,10-20}
= {5,10-20} Lowest Available: 1, Highest Used: 20, Count: 12


// Ignore duplicate, single
+5
= {5,10-20} Lowest Available: 1, Highest Used: 20, Count: 12


// Ignore duplicate, range left edge
+10
= {5,10-20} Lowest Available: 1, Highest Used: 20, Count: 12


// Ignore duplicate, range right edge
+20
= {5,10-20} Lowest Available: 1, Highest Used: 20, Count: 12


// Ignore duplicate, range middle
+15
= {5,10-20} Lowest Available: 1, Highest Used: 20, Count: 12



// Can't add zero

+0
Exception: Can't add zero or negative numbers to an ID number set.
(System.ArgumentException)
= {} Lowest Available: 1, Highest Used: 0, Count: 0

