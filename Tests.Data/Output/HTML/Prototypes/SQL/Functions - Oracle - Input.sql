
-- Func: Returns1
FUNCTION Returns1
RETURN NUMBER IS
	x NUMBER;
BEGIN
END

-- Func: Returns2
CREATE FUNCTION Returns2
RETURN NUMBER AS
	x NUMBER(2,3);
BEGIN
END

-- Func: Returns3
CREATE OR REPLACE FUNCTION Returns3
   RETURN NUMBER IS
BEGIN 
END



-- Func: Params1
FUNCTION Params1 (
	Param1 INTEGER,
	Param2 VARCHAR2(100),
	Param3 NUMBER(4) DEFAULT 5,
	Param4 NUMBER(5,6) := 2e-1
	)
RETURN NUMBER AS
	x NUMBER;
BEGIN
END

-- Func: Params2
CREATE FUNCTION Params2 (
	Param1 IN INTEGER,
	Param2 OUT INTEGER NOT NULL,
	Param3 IN OUT INTEGER,
	Param4 IN OUT NOCOPY NUMBER NOT NULL
	)
RETURN NUMBER IS
	x NUMBER(2,3) NOT NULL;
BEGIN
END

-- Func: Params3
CREATE OR REPLACE FUNCTION Params3 (
	Param1 CLASS.VARIABLE%TYPE,
	Param2 IN OUT NOCOPY NUMBER(5, 6) NOT NULL := +6E2
	)
RETURN NUMBER AS
BEGIN
END



-- Func: ExtraKeywords
CREATE OR ALTER EDITIONABLE RANDOM_WORD FUNCTION ExtraKeywords (
	Param1 INTEGER
	)
RETURN NUMBER IS
	x NUMBER NOT NULL;
BEGIN
END



-- Func: Modifiers1
CREATE FUNCTION Modifiers1
RETURN NUMBER
SHARING = NONE AUTHID DEFINER ACCESSIBLE BY (FUNCTION Func1, PACKAGE A.B) DEFAULT COLLATION USING_NLS_COMP
AS
BEGIN
END

-- Func: Modifiers2
CREATE FUNCTION Modifiers2
RETURN NUMBER
SHARING = METADATA AUTHID CURRENT_USER DETERMINISTIC PARALLEL_ENABLE RESULT_CACHE AGGREGATE USING Schema.$IS
IS
	x NUMBER NOT NULL;
BEGIN
END

-- Func: Modifiers3
CREATE FUNCTION Modifiers3
RETURN NUMBER
DETERMINISTIC PARALLEL_ENABLE (PARTITION x BY VALUE (col)) RESULT_CACHE RELIES ON (x, y) PIPELINED USING Schema.AS#
AS
BEGIN
END

-- Func: Modifiers4
CREATE FUNCTION Modifiers4
RETURN NUMBER
PARALLEL_ENABLE (PARTITION x BY HASH (col) ORDER x BY (y, z)) PIPELINED TABLE POLYMORPHIC USING Schema.#BEGIN
IS
	x NUMBER NOT NULL;
BEGIN
END
