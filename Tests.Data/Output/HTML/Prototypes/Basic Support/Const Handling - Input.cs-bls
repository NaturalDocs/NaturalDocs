
/* Title: Const Handling

	The formatting on these is always going to be less than ideal, we just need to make sure the code handles
	them at least passably.

	It's tempting to fade them out like we do for default values, but it's undesirable with template<int> and
	array[] which are the far more common cases.

	C and D mean "constant pointer to a constant int".

*/


/* Function: FunctionName
*/
void FunctionName (const int * a, int * const b, const int * const c, int const * const d)
	{
	}

// Function: FunctionName2
void FunctionName2 (const int* a, int* const b, const int* const c, int const* const d)
	{
	}

// Function: FunctionName3
void FunctionName3 (const int *a, int *const b, const int *const c, int const *const d)
	{
	}
