
// Function: FunctionName
int FunctionName ()
	{
	}

// Function: FunctionName2
int FunctionName2 ( )
	{
	}

// Function: FunctionName3
int FunctionName3()
	{
	}

// Function: FunctionName4
void FunctionName4 (int x, float y)
	{
	}

/* Function: FunctionName5
	We need a test with the parethesis attached to the function name because in the past the code
	that skipped the identifier would skip the parentheses as part of it (like it should with var[]) thus
	screwing up the parameter list.
*/
void FunctionName5(int x, float y)
	{
	}

// Function: FunctionName6
void FunctionName6 (int x_1, int __y2__)
	{
	}

// Function: FunctionName7
virtual void FunctionName7 (int* x, int y[12], char* z = "") = 0;
