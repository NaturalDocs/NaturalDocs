FUNCTION #Identifier1@
-----
FUNCTION ##Identifier2$
-----
FUNCTION @$schema#.@Id_ent$if#er3
-----
FUNCTION Keyword_AS_Fakeout
-----
FUNCTION Keyword#AS@Fakeout
-----
FUNCTION Keyword_IS_Fakeout
-----
FUNCTION Keyword$IS#Fakeout
-----
FUNCTION DeclarationSyntax1_NoParams RETURNS INTEGER
-----
CREATE FUNCTION DeclarationSyntax2_NoParams RETURNS INTEGER
-----
CREATE OR ALTER FUNCTION DeclarationSyntax3_NoParams RETURNS TABLE
-----
ALTER FUNCTION DeclarationSyntax4_NoParams RETURNS TABLE ( Column1 INT PRIMARY KEY NOT NULL, Column2 NVARCHAR(255) DEFAULT 'string' )
-----
FUNCTION Params1 @Param1 INTEGER, @Param2 VARCHAR(100), @Param3 VARCHAR(40) = 'string', @Param4 AS SCHEMA.NUMBER(5,6) = +.2e-1, @Param5 AS VARCHAR(max) = 'escaped''apostrophe', @Param6 AS INTEGER = 0xdeadbeef RETURNS INTEGER
-----
CREATE FUNCTION @Params2 ( @Param1 VARYING INTEGER NULL, @Param2 INTEGER OUT, @Param3 AS INTEGER NOT NULL READONLY, @Param4 AS VARYING SCHEMA.NUMBER NOT NULL = 12 OUTPUT READONLY) RETURNS INTEGER
-----
FUNCTION With1 RETURNS INTEGER WITH NATIVE_COMPILATION, SCHEMABINDING, EXECUTE AS 'Name'
-----
FUNCTION With2 RETURNS INTEGER WITH EXEC AS 'RETURNS', INLINE = OFF, RETURNS NULL ON NULL INPUT
-----
CREATE OR ALTER FUNCTION With3 RETURNS TABLE WITH EXECUTE AS 'BEGIN'
-----
CREATE FUNCTION Fakeout @AS INTEGER, @WITH INTEGER, @RETURNS INTEGER RETURNS @WITH TABLE ( Column1 INT )
