<!--
	File: Engine.targets
	___________________________________________________________________________

	This is the supplemental MSBuild file for the Natural Docs engine.


	Topic: Notes on Duplication

		There are separate ForBuild and ForPublish versions of the targets that are the same except for the output
		folder they use.  Why?

		You might think that you can make one property for the output folder and set its value based on whether
		we're being published or built.  $(_IsPublishing) seems to work to detect it.  However, the $(TargetDir) and
		$(PublishDir) properties are not always set before the targets are called, so you can't get their values that
		early.

		Then you can just define the property in the <Compiler Event Targets>, right?  Nope, those values don't get
		persisted to the <Individual Action Targets> they call.

		Okay, fine, so then you can give each action target its own copy and just copy the logic that sets the property
		in  there, right?  A little ugly but it should work?  No, MSBuild only executes targets once no matter how many
		times they're called, so that's why they need to be separate targets.  Also, publishing doesn't execute a clean
		beforehand, so if you want to do that you'd copy SQLite there once for the build, clean it once before the publish,
		and then it won't copy a second time for the publish.

		You can't parameterize targets either, at least not with CallTarget.  You'd have to use a MSBuild task to re-call
		them passing different properties.  At this point things are feeling janky enough that I'd rather just duplicate the
		logic into ForBuild and ForPublish versions and be done with it.

-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">


	<!--
		Group: Properties
		_____________________________________________________________________________
	-->
	<PropertyGroup>

		<!--
			Build Property: NaturalDocsSourceDir

			The folder containing Natural Docs' source.  It should be the root of this file tree:

			> [NaturalDocsSourceDir]\CLI
			> [NaturalDocsSourceDir]\Engine
			> [NaturalDocsSourceDir]\Engine.Tests
			> etc.

			If this property is not defined it assumes you're building part of Natural Docs itself and thus only have to go up one
			folder level from the $(ProjectDir) property to find it.  However, it sanity checks this by trying to find the Engine
			subfolder.
		-->
		<NaturalDocsSourceDir Condition="'$(NaturalDocsSourceDir)'==''">$(ProjectDir)..\</NaturalDocsSourceDir>

	</PropertyGroup>



	<!--
		Group: Compiler Event Targets
		_____________________________________________________________________________

		These targets attach to compiler events related to building this project.  They don't need to be manually called.
	-->

		<!--
			Build Target: Engine_AfterClean
		-->
		<Target Name="Engine_AfterClean" AfterTargets="Clean">

			<CallTarget Targets="Engine_ValidateProperties" />

			<CallTarget Targets="Engine_CleanForBuild_SQLite" />
			<CallTarget Targets="Engine_CleanForBuild_Config" />
			<CallTarget Targets="Engine_CleanForBuild_Styles" />
			<CallTarget Targets="Engine_CleanForBuild_Translations" />
			<CallTarget Targets="Engine_CleanForBuild_License" />

			<CallTarget Targets="Engine_CleanForBuild_Regex" />

		</Target>


		<!--
			Build Target: Engine_AfterBuild
		-->
		<Target Name="Engine_AfterBuild" AfterTargets="Build">

			<CallTarget Targets="Engine_ValidateProperties" />

			<CallTarget Targets="Engine_CopyForBuild_SQLite" />
			<CallTarget Targets="Engine_CopyForBuild_Config" />
			<CallTarget Targets="Engine_CopyForBuild_Styles" />
			<CallTarget Targets="Engine_CopyForBuild_Translations" />
			<CallTarget Targets="Engine_CopyForBuild_License" />

		</Target>


		<!--
			Build Target: Engine_BeforePublish
		-->
		<Target Name="Engine_BeforePublish" BeforeTargets="Publish">

			<CallTarget Targets="Engine_ValidateProperties" />

			<CallTarget Targets="Engine_CleanForPublish_SQLite" />
			<CallTarget Targets="Engine_CleanForPublish_Config" />
			<CallTarget Targets="Engine_CleanForPublish_Styles" />
			<CallTarget Targets="Engine_CleanForPublish_Translations" />
			<CallTarget Targets="Engine_CleanForPublish_License" />

			<CallTarget Targets="Engine_CleanForPublish_Regex" />

		</Target>


		<!--
			Build Target: Engine_AfterPublish
		-->
		<Target Name="Engine_AfterPublish" AfterTargets="Publish">

			<CallTarget Targets="Engine_ValidateProperties" />

			<CallTarget Targets="Engine_CopyForPublish_SQLite" />
			<CallTarget Targets="Engine_CopyForPublish_Config" />
			<CallTarget Targets="Engine_CopyForPublish_Styles" />
			<CallTarget Targets="Engine_CopyForPublish_Translations" />
			<CallTarget Targets="Engine_CopyForPublish_License" />

		</Target>




	<!--
		Group: Individual Action Targets
		_____________________________________________________________________________

		These targets are for individual resources and are called by the <Compiler Event Targets>.
	-->

		<!--
			Build Target: Engine_ValidateProperties
			Makes sure all the <Properties> are set to valid values.
		-->
		<Target Name="Engine_ValidateProperties">

			<Error
				Condition="!HasTrailingSlash('$(NaturalDocsSourceDir)')"
				Text="The NaturalDocsSourceDir build property needs a trailing backslash." />
			<Error
				Condition="!Exists('$(NaturalDocsSourceDir)Engine')"
				Text="Cannot find the Natural Docs Engine source in $(NaturalDocsSourceDir)Engine.  If you are not building Natural Docs itself but instead something which depends on it, please set the NaturalDocsSourceDir build property." />

		</Target>


		<!--
			Build Target: Engine_CopyForBuild_SQLite
		-->
		<Target Name="Engine_CopyForBuild_SQLite">

			<Copy
				Condition="'$(Platform)'=='Windows x64'"
				SourceFiles="$(NaturalDocsSourceDir)Engine\Resources\SQLite\SQLite.Win.x64.dll"
				DestinationFolder="$(TargetDir)"
				/>
			<Copy
				Condition="'$(Platform)'=='macOS x64'"
				SourceFiles="$(NaturalDocsSourceDir)Engine\Resources\SQLite\libSQLite.Mac.x64.so"
				DestinationFolder="$(TargetDir)"
				/>
			<Copy
				Condition="'$(Platform)'=='Linux x64'"
				SourceFiles="$(NaturalDocsSourceDir)Engine\Resources\SQLite\libSQLite.Linux.x64.so"
				DestinationFolder="$(TargetDir)"
				/>

		</Target>


		<!--
			Publish Target: Engine_CopyForPublish_SQLite
		-->
		<Target Name="Engine_CopyForPublish_SQLite">

			<Copy
				Condition="'$(Platform)'=='Windows x64'"
				SourceFiles="$(NaturalDocsSourceDir)Engine\Resources\SQLite\SQLite.Win.x64.dll"
				DestinationFolder="$(PublishDir)"
				/>
			<Copy
				Condition="'$(Platform)'=='macOS x64'"
				SourceFiles="$(NaturalDocsSourceDir)Engine\Resources\SQLite\libSQLite.Mac.x64.so"
				DestinationFolder="$(PublishDir)"
				/>
			<Copy
				Condition="'$(Platform)'=='Linux x64'"
				SourceFiles="$(NaturalDocsSourceDir)Engine\Resources\SQLite\libSQLite.Linux.x64.so"
				DestinationFolder="$(PublishDir)"
				/>

		</Target>


		<!--
			Build Target: Engine_CleanForBuild_SQLite
		-->
		<Target Name="Engine_CleanForBuild_SQLite">

			<Delete Files="$(TargetDir)SQLite.Win.x64.dll" />
			<Delete Files="$(TargetDir)libSQLite.Mac.x64.so" />
			<Delete Files="$(TargetDir)libSQLite.Linux.x64.so" />


			<!-- x86 builds, not in use anymore -->

			<Delete Files="$(TargetDir)SQLite.Win.x86.dll" />
			<Delete Files="$(TargetDir)libSQLite.Mac.x86.so" />
			<Delete Files="$(TargetDir)libSQLite.Linux.x86.so" />


			<!-- Old file names, not in use anymore -->

			<Delete Files="$(TargetDir)NaturalDocs.Engine.SQLite.dll" />
			<Delete Files="$(TargetDir)libNaturalDocs.Engine.SQLite.Mac32.so" />
			<Delete Files="$(TargetDir)libNaturalDocs.Engine.SQLite.Mac64.so" />
			<Delete Files="$(TargetDir)libNaturalDocs.Engine.SQLite.Linux32.so" />
			<Delete Files="$(TargetDir)libNaturalDocs.Engine.SQLite.Linux64.so" />


			<!-- Map file for Mono, not in use anymore -->

			<Delete Files="$(TargetDir)NaturalDocs.Engine.dll.config" />

		</Target>


		<!--
			Publish Target: Engine_CleanForPublish_SQLite
		-->
		<Target Name="Engine_CleanForPublish_SQLite">

			<Delete Files="$(PublishDir)SQLite.Win.x64.dll" />
			<Delete Files="$(PublishDir)libSQLite.Mac.x64.so" />
			<Delete Files="$(PublishDir)libSQLite.Linux.x64.so" />


			<!-- x86 builds, not in use anymore -->

			<Delete Files="$(PublishDir)SQLite.Win.x86.dll" />
			<Delete Files="$(PublishDir)libSQLite.Mac.x86.so" />
			<Delete Files="$(PublishDir)libSQLite.Linux.x86.so" />


			<!-- Old file names, not in use anymore -->

			<Delete Files="$(PublishDir)NaturalDocs.Engine.SQLite.dll" />
			<Delete Files="$(PublishDir)libNaturalDocs.Engine.SQLite.Mac32.so" />
			<Delete Files="$(PublishDir)libNaturalDocs.Engine.SQLite.Mac64.so" />
			<Delete Files="$(PublishDir)libNaturalDocs.Engine.SQLite.Linux32.so" />
			<Delete Files="$(PublishDir)libNaturalDocs.Engine.SQLite.Linux64.so" />


			<!-- Map file for Mono, not in use anymore -->

			<Delete Files="$(PublishDir)NaturalDocs.Engine.dll.config" />

		</Target>


		<!--
			Build Target: Engine_CleanForBuild_Regex
		-->
		<Target Name="Engine_CleanForBuild_Regex">

			<!-- Old file names, not in use anymore -->
			<Delete
				Files="$(TargetDir)NaturalDocs.Engine.Regex.dll"
				/>

		</Target>


		<!--
			Build Target: Engine_CleanForPublish_Regex
		-->
		<Target Name="Engine_CleanForPublish_Regex">

			<!-- Old file names, not in use anymore -->
			<Delete
				Files="$(PublishDir)NaturalDocs.Engine.Regex.dll"
				/>

		</Target>


		<!--
			Build Target: Engine_CopyForBuild_Config
		-->
		<Target Name="Engine_CopyForBuild_Config">

			<MakeDir Directories="$(TargetDir)Config" />

			<ItemGroup>
				<Engine_CopyForBuild_ConfigFiles Include="$(NaturalDocsSourceDir)Engine\Resources\Config\**\*.*" />
			</ItemGroup>

			<Copy
				SourceFiles="@(Engine_CopyForBuild_ConfigFiles)"
				DestinationFolder="$(TargetDir)Config\%(RecursiveDir)"
				/>

		</Target>


		<!--
			Build Target: Engine_CopyForPublish_Config
		-->
		<Target Name="Engine_CopyForPublish_Config">

			<MakeDir Directories="$(PublishDir)Config" />

			<ItemGroup>
				<Engine_CopyForPublish_ConfigFiles Include="$(NaturalDocsSourceDir)Engine\Resources\Config\**\*.*" />
			</ItemGroup>

			<Copy
				SourceFiles="@(Engine_CopyForPublish_ConfigFiles)"
				DestinationFolder="$(PublishDir)Config\%(RecursiveDir)"
				/>

		</Target>


		<!--
			Build Target: Engine_CleanForBuild_Config
		-->
		<Target Name="Engine_CleanForBuild_Config">

			<RemoveDir Directories="$(TargetDir)Config" />

		</Target>


		<!--
			Build Target: Engine_CleanForPublish_Config
		-->
		<Target Name="Engine_CleanForPublish_Config">

			<RemoveDir Directories="$(PublishDir)Config" />

		</Target>


		<!--
			Build Target: Engine_CopyForBuild_Styles
		-->
		<Target Name="Engine_CopyForBuild_Styles">

			<MakeDir Directories="$(TargetDir)Styles" />

			<ItemGroup>
				<Engine_CopyForBuild_StyleFiles Include="$(NaturalDocsSourceDir)Engine\Resources\Styles\**\*.*" />
			</ItemGroup>

			<Copy
				SourceFiles="@(Engine_CopyForBuild_StyleFiles)"
				DestinationFolder="$(TargetDir)Styles\%(RecursiveDir)"
				/>

		</Target>


		<!--
			Build Target: Engine_CopyForPublish_Styles
		-->
		<Target Name="Engine_CopyForPublish_Styles">

			<MakeDir Directories="$(PublishDir)Styles" />

			<ItemGroup>
				<Engine_CopyForPublish_StyleFiles Include="$(NaturalDocsSourceDir)Engine\Resources\Styles\**\*.*" />
			</ItemGroup>

			<Copy
				SourceFiles="@(Engine_CopyForPublish_StyleFiles)"
				DestinationFolder="$(PublishDir)Styles\%(RecursiveDir)"
				/>

		</Target>


		<!--
			Build Target: Engine_CleanForBuild_Styles
		-->
		<Target Name="Engine_CleanForBuild_Styles">

			<RemoveDir Directories="$(TargetDir)Styles" />

		</Target>


		<!--
			Build Target: Engine_CleanForPublish_Styles
		-->
		<Target Name="Engine_CleanForPublish_Styles">

			<RemoveDir Directories="$(PublishDir)Styles" />

		</Target>


		<!--
			Build Target: Engine_CopyForBuild_Translations
		-->
		<Target Name="Engine_CopyForBuild_Translations">

			<MakeDir Directories="$(TargetDir)Translations" />

			<ItemGroup>
				<Engine_CopyForBuild_TranslationFiles Include="$(NaturalDocsSourceDir)Engine\Resources\Translations\**\*.*" />
			</ItemGroup>

			<Copy
				SourceFiles="@(Engine_CopyForBuild_TranslationFiles)"
				DestinationFolder="$(TargetDir)Translations\%(RecursiveDir)"
				/>

		</Target>


		<!--
			Build Target: Engine_CopyForPublish_Translations
		-->
		<Target Name="Engine_CopyForPublish_Translations">

			<MakeDir Directories="$(PublishDir)Translations" />

			<ItemGroup>
				<Engine_CopyForPublish_TranslationFiles Include="$(NaturalDocsSourceDir)Engine\Resources\Translations\**\*.*" />
			</ItemGroup>

			<Copy
				SourceFiles="@(Engine_CopyForPublish_TranslationFiles)"
				DestinationFolder="$(PublishDir)Translations\%(RecursiveDir)"
				/>

		</Target>


		<!--
			Build Target: Engine_CleanForBuild_Translations
		-->
		<Target Name="Engine_CleanForBuild_Translations">

			<RemoveDir Directories="$(TargetDir)Translations" />

		</Target>


		<!--
			Build Target: Engine_CleanForPublish_Translations
		-->
		<Target Name="Engine_CleanForPublish_Translations">

			<RemoveDir Directories="$(PublishDir)Translations" />

		</Target>


		<!--
			Build Target: Engine_CopyForBuild_License
		-->
		<Target Name="Engine_CopyForBuild_License">

			<Copy
				SourceFiles="$(NaturalDocsSourceDir)Engine\Resources\License\License.txt"
				DestinationFolder="$(TargetDir)"
				/>

		</Target>


		<!--
			Build Target: Engine_CopyForPublish_License
		-->
		<Target Name="Engine_CopyForPublish_License">

			<Copy
				SourceFiles="$(NaturalDocsSourceDir)Engine\Resources\License\License.txt"
				DestinationFolder="$(PublishDir)"
				/>

		</Target>


		<!--
			Build Target: Engine_CleanForBuild_License
		-->
		<Target Name="Engine_CleanForBuild_License">

			<Delete
				Files="$(TargetDir)License.txt"
				/>

		</Target>


		<!--
			Build Target: Engine_CleanForPublish_License
		-->
		<Target Name="Engine_CleanForPublish_License">

			<Delete
				Files="$(PublishDir)License.txt"
				/>

		</Target>


</Project>
